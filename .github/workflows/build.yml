# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: ['*']
    tags: ['*.*.*']


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Run tests
      run: |
        tox

  debian_package:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.package_name.outputs.name }}

    steps:
      - uses: actions/checkout@v2

      - name: Build Package
        uses: dawidd6/action-debian-package@v1.0.0

      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: "debian_package"
          path: "*.deb"

      - name: Set Package Name
        id: package_name
        run: echo "::set-output name=name::$(ls *.deb)"

      - name: Get Names
        run: |
          ls -R
          echo "${{ steps.package_name.outputs.name }}"

  release:
    runs-on: ubuntu-latest
    needs: [tests, debian_package]
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  debian_release:
    runs-on: ubuntu-latest
    needs: [release, debian_package]
    steps:
      - uses: actions/download-artifact@master
        with:
          name: "debian_package"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_name: ${{ needs.debian_package.outputs.name }}
          asset_path: "./${{ needs.debian_package.outputs.name }}"
          asset_content_type: "application/vnd.debian.binary-package"

  python_release:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install pypa/build
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Publish packages to pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          tox -e publish

  publish:
    runs-on: ubuntu-latest
    needs: [release, debian_release, python_release]
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
